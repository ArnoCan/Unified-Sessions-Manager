#!/bin/bash


########################################################################
#
#PROJECT:      Unified Sessions Manager
#AUTHOR:       Arno-Can Uestuensoez - acue@UnifiedSessionsManager.org
#MAINTAINER:   Arno-Can Uestuensoez - acue_sf1@sourceforge.net
#SHORT:        ctys
#CALLFULLNAME: Commutate To Your Session
#LICENCE:      GPL3
#VERSION:      01_06_001a06
#
########################################################################
#
# Copyright (C) 2007 Arno-Can Uestuensoez (UnifiedSessionsManager.org)
#
########################################################################

printDBG $S_CONF  ${D_FRAME} $LINENO $BASH_SOURCE "LOAD-CONFIG:${BASH_SOURCE}"


PATH=${PATH}:/sbin:/usr/local/bin
export PATH


#
#reset callers TTY settings when pseudoterminal option of ssh is used.
STTY=`stty -g 2>/dev/null`
if [ $? -eq 0 ];then
    trap "stty $STTY" EXIT
fi

################################################################
#           Absolutely basic for bootstrap                     #
################################################################

#initially native access for current user required
WHICH=`getPathName  $LINENO $BASH_SOURCE ERROR which  /usr/bin`
WHICH1=`callErrOutWrapper $LINENO $BASH_SOURCE  $WHICH which`
if [ $? -ne 0 ];then
    ABORT=1
    printERR $LINENO $_BASE_XEN ${ABORT} "Missing \"which\""
    gotoHell ${ABORT}

    printERR $LINENO $_BASE_XEN ${ABORT} "Does not make sence, even for \"-n\"!"
    exit ${ABORT}
fi

if [ "$WHICH" != "$WHICH1" ];then
    ABORT=1
    printERR $LINENO $_BASE_XEN ${ABORT} "Do not want several versions of which on the same machine!"
    printERR $LINENO $_BASE_XEN ${ABORT} " 1. check executables/links/etc."
    printERR $LINENO $_BASE_XEN ${ABORT} " 2. check your PATH"
    splitPath 15 PATH $PATH
    gotoHell ${ABORT}

    printERR $LINENO $_BASE_XEN ${ABORT} "Could be serious, thus correct it first!"
    exit ${ABORT}
fi

################################################################
#           Default definitions for system tools               #
################################################################
KSU=`getPathName  $LINENO $BASH_SOURCE WARNINGEXT ksu  /usr/kerberos/bin`
SUDO=`getPathName $LINENO $BASH_SOURCE WARNINGEXT sudo /usr/bin`

if [ -z "$KSU" -a -z "$SUDO" -a "$USER" != "root" ];then
    if [ `id -u $USER` -eq 0 ];then
	printERR $LINENO $BASH_SOURCE 1 "non-root user \"$USER\" has ID=0, don't do that"
    else
	printWNG 1 $LINENO $BASH_SOURCE 1 "Probably limited access, missing:ksu and sudo, and $USER!=root"
    fi
else
    printDBG $S_CONF  ${D_FRAME} $LINENO $BASH_SOURCE "KSU=$KSU"
    printDBG $S_CONF  ${D_FRAME} $LINENO $BASH_SOURCE "SUDO=$SUDO"
fi

KILL=`getPathName $LINENO $BASH_SOURCE WARNINGEXT kill /bin`
PKILL=`getPathName $LINENO $BASH_SOURCE WARNINGEXT pkill /usr/bin`





#########
#WMCTRL
#Required for desktop/workspace switching, has to be installed manually and be present 
#on DISPLAY target machines only.
CTYS_WMCTRL=${CTYS_WMCTRL:-wmctrl}



#########
#LM-SENSORS
#Displaying the health state of PMs.
CTYS_SENSORS=${CTYS_SENSORS:-/sbin/sysctl hw.sensors}



#########
#HDDTEMP
#Temperatures of most HDDs for usage with gkrellm.
CTYS_HDDTEMP=${CTYS_HDDTEMP:-/usr/bin/false}



#########
#SMARTCTL
#Used for temperature evaluation when polling values.
#Supports most 3ware RAID arrays.
CTYS_SMARTCTL=${CTYS_SMARTCTL:-/usr/local/sbin/smartctl}


#########
#DMIDECODE
#Used for fetching the UUID of current machine for generating of
#configuration file.
CTYS_DMIDECODE=${CTYS_DMIDECODE:-/usr/local/sbin/dmidecode}


#########
#If bridge is set during boot, and DHCP is used, probably a lower level,
#maybe 0 should be used.
#Else it seems safe for commen platforms setting it higher.
#  system-default=30, 
#  ctys-fallback=0
#This is the delay for the creation of the first VDE-switch.
BRIDGE_FORWARDDELAY=${BRIDGE_FORWARDDELAY:-15};


#########
#CP
CP=/bin/cp
CPR=" -pPR "


#########
#PS
PS=ps
PSF=" -w -w -u "
PSEF=" -w -w -aux "
PSU=" -w -w -U "
PSG="   "
PSL=" -w -w -l -x "


##########################
#CTYS_BASH=bash
#CTYS_SSH=ssh
#CTYS_SED=sed
#CTYS_AWK=awk

[ -z "$CLIEXE" ]&&CLIEXE=`getPathName $LINENO $BASH_SOURCE ERROR ${CLISHELL} /usr/local/bin`
[ -z "$BASHEXE" ]&&BASHEXE="$CLIEXE"
[ -z "$CTYS_SYSCTL" ]&&CTYS_SYSCTL=`getPathName $LINENO $BASH_SOURCE ERROR sysctl /sbin`
[ -z "$CTYS_LSPCI" ]&&CTYS_LSPCI=`getPathName $LINENO $BASH_SOURCE WARNING lspci /usr/local/sbin`
[ -z "$CTYS_NETSTAT" ]&&CTYS_NETSTAT=`getPathName $LINENO $BASH_SOURCE WARNING netstat /usr/bin`
[ -z "$CTYS_CHMOD" ]&&CTYS_CHMOD=`getPathName $LINENO $BASH_SOURCE ERROR chmod /bin`


#requires a pty, set's ENV
EXECSHELLWRAPPER="${CLISHELL} -l -c "

#does not require a pty, but may cause some PATH trouble.
EXECSHELLWRAPPERNOPTY="${CLISHELL} -c "



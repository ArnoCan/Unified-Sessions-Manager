#!/bin/bash

function now () {
    date +%Y%m%d%H%M%S
}

CURDATE=`now`

#testees
TSTHOSTS1="delphi olymp app2 app1 ws1 ws2 lab00 "
TSTHOSTS=${TSTHOSTS:-$TSTHOSTS1}

#results
OUTBASE=/tmp/ctys/tst.${CURDATE}
if [ ! -d "${OUTBASE}" ];then
    mkdir -p "${OUTBASE}"
fi

echo
echo
echo "###########################################"
echo "#        TEST: tst.${OUTBASE}             #"
echo "###########################################"
echo
echo


#1. collect
echo "*******************************************"
echo "*      ENUMERATE - collect data           *"
echo "*******************************************"
#
OUTDIR=${OUTBASE}/enum
#
for i in $TSTHOSTS;do
    curout="${OUTDIR}/${i}"
    echo "-------------------------------------------------"
    echo "$i:start:`now`"
    echo "-------------------------------------------------"
    mkdir -p "${curout}"
    ctys -a enumerate=matchvstat:testdummy,label,machine,b:~/ctys/test/testdummy -C off -c off -b sync,parallel -T ALL -t ALL  -- '(-d 2,w:0,s:16,p)' ${i} 3>&2 2>&1 1>&3 >${curout}/enum.fdb |tee ${curout}/enumerate.log
    cut -d ';' -f 1 --complement ${curout}/enum.fdb >${curout}/enum-cut.fdb
    echo "$i:end:`now`"
    echo
done


#
#2. analyse
#
echo "*******************************************"
echo "*      ENUMERATE - analyse data           *"
echo "*******************************************"
#
STAT=0;
for i in $TSTHOSTS;do
    for j in $TSTHOSTS;do
	if [ "$i" == "$j" ];then
	    continue
	fi
        I=${OUTDIR}/${i}/enum-cut.fdb
        J=${OUTDIR}/${j}/enum-cut.fdb
	echo -n "${i} <> ${j} =>"
	diff -q ${I} ${J} >/dev/null
        if [ $? -eq 0 ];then
	    echo "OK"
	else
	    echo "NOK"
            let STAT++;
	fi
    done
done
echo "Cumulative STATE=${STAT}"


#
#3. collect
#
echo "*******************************************"
echo "*        vdbgen - collect data            *"
echo "*******************************************"
#
OUTDIR=${OUTBASE}/vdbgen
#
for i in $TSTHOSTS;do
    curout="${OUTDIR}/${i}"
    echo "-------------------------------------------------"
    echo "$i:start:`now`"
    echo "-------------------------------------------------"
    mkdir -p "${curout}"
    ctys-vdbgen -o ${curout} -a enumerate=matchvstat:testdummy,label,machine,b:~/ctys/test/testdummy -C off -c off -b sync,parallel -T ALL -t ALL  -- '(-d 2,w:0,s:16,p)' ${i} 3>&2 2>&1 1>&3  |tee ${curout}/enumerate.log
    cut -d ';' -f 1 --complement ${curout}/enum.fdb >${curout}/enum-cut.fdb
    echo "$i:end:`now`"
    echo
done


#
#4. analyse
#
echo "*******************************************"
echo "*       vdbgen - analyse data             *"
echo "*******************************************"
#
for i in $TSTHOSTS;do
    for j in $TSTHOSTS;do
	if [ "$i" == "$j" ];then
	    continue
	fi
        I=${OUTDIR}/${i}/enum-cut.fdb
        J=${OUTDIR}/${j}/enum-cut.fdb
	echo -n "${i} <> ${j} =>"
	diff -q ${I} ${J} >/dev/null
        if [ $? -eq 0 ];then
	    echo "OK"
	else
	    echo "NOK"
            let STAT++;
	fi
    done
done
echo "Cumulative STATE=${STAT}"





#
#5. analyse
#
echo "*******************************************"
echo "*  cross ENUMERATExvdbgen - analyse data  *"
echo "*******************************************"
#
for i in $TSTHOSTS;do
    for j in $TSTHOSTS;do
	if [ "$i" == "$j" ];then
	    continue
	fi
        I=${OUTBASE}/enum/${i}/enum-cut.fdb
        J=${OUTBASE}/vdbgen/${j}/enum-cut.fdb
	echo -n "enum:${i} <> vdbgen${j} =>"
	diff -q ${I} ${J} >/dev/null
        if [ $? -eq 0 ];then
	    echo "OK"
	else
	    echo "NOK"
            let STAT++;
	fi
    done
done
echo "Cumulative STATE=${STAT}"

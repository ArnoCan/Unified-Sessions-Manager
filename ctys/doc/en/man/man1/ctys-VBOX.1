.TH "ctys-VBOX" 1 "June, 2010" ""


.P
\&.

.SH NAME
.P
\fBctys-VBOX - VirtualBox(TM) Interface\fR

.SH SYNTAX

   ctys -t VBOX  -a action[=<suboptions>] ...
   ctys -T VBOX  -a action[=<suboptions>] ...
   ctys -T ALL   -a action[=<suboptions>] ...

.SH DESCRIPTION
.TP
\fBATTENTION:\fR

Current version of \fBVBOX\-Plugin\fR is an \fBALPHA RELEASE\fR with partial function, refer to releasenotes.
Contained functions comprise CREATE, CANCEL, LIST, ENUMERATE, INFO, and SHOW. 
Some toolset functions may be missing for now, the following description is defined as a draft for the
target version.
Current version may not yet contain e.g. the automated inventory registration and the 
autonomous installer tools.

.P
The \fBVBOX\fR plugin adds support for sessions to
\fBVirtualMachines\fR of type
\fBVirtualBox \- Oracle(TM)\fR.

.P
The management of the virtual machines include particularly
the support of boot and shutdown for local and remote virtual machines
including an inventory with accessible machines.
Stored machines on network devices could be accessed by multiple worker\-machines,
providing a multipath\-registration within the inventory.
The inventory is populated automatically by scanning the local
and remote filesystems and collecting the information of detected
VMs into a local ASCII file\-database.

.P
The access to VMs is supported by the full scope of the \fB<machine\-address>\fR,
thus e.g. a user defined LABEL as a shortcut\-alias could be used.
The VBOX plugin is "\fBVM\-STACK safe\fR" as it handles running embedded virtual machines
and emulators by propagating state change events(e.g. SHUTDOWN) of the execution platform to
contained hypervisors and emulators.

.P
The scope comprises for now the products
WMware\-Workstation, WMware\-Server, and VMware\-Player,
which are all TradeMarks of VMware Inc.
The supported product versions are automatically detected, 
thus no furter parameters for version distinction are required.

.P
For now in case of usage of RDP protocol the access permissions have to be set before by the user.
This could be either performed from the standard GUI of the VirtualBox command, or by e.g. VBoxManage
with the following call:

.RS
.IP \(bu 3
VBoxManage controlvm vrdp=on
.RE

.P
Optionally for required shared mode:

.RS
.IP \(bu 3
VBoxManage modifyvm vrdpmulticon=on
.RE

.SH OPTIONS
.TP
\fB\-a action[=<suboptions>]\fR

.P
For the complete Syntax refer to the depicted generic superset 
within the call\-framework 
\fBctys(1)\fR
\&.

.TP
\fBCANCEL\fR

The client server communications is handeled basically by two different types
of client server communications.
Following applies to the generic framework interface:

.RS
.IP 1. 3
Tightly coupled synchronous stateful communications, where the cancellation
of the client terminates the server too.

.IP 2. 3
Loosely coupled asyncronous stateless communications, where the server
exists independently from the client.
Thus a cancel ot the client(s) does not influence the existence of the server
processes.
This mode could be applied in the so called 'headless' mode.
.RE

.P
Particularly the wildcard\-attribute \fBALL\fR is provided for application on all sessions of selected and permissive user\-scope.

.TP
\fBCREATE\fR
This starts a VM, where following could be applied.

.RS
.IP \(bu 3
\fBCONSOLE\fR

All available console types for the supported versions could be used.
An overview of provided
\fBCONSOLE types\fR
is listed within the description of the standard call for CREATE.
Particularly  the following console types are available for VBOX:

.RS
.IP \(bu 3
\fBVBOX\fR

The standard frontend, but is of type synchronous,
where the states of client and server as tightly coupled.
This could be used in DISPLAYFORWARDING mode only.

.IP \(bu 3
\fBVBOXSDL\fR

Similar to the standard frontend, is of type synchronous too,
where the states of client and server as tightly coupled.
This could be used in DISPLAYFORWARDING mode only.

.IP \(bu 3
\fBRDP\fR

This is functionally similar to the VNC type, where the access is loosely coupled by an
stateless asynchronous GUI protocoll.
Thus this type could be arbitrarily attached and detached.

Current version supports the \fBrdesktop\fR client only, which is detected automatically,
the order of scan for the location of the binaries could be varied by configuration files.

.IP \(bu 3
\fBNONE\fR

The initially headless mode.
.RE
.RE

.TP
\fBENUMERATE\fR
Enumerates all VBOX sessions, therefore first the created
ctys\-files are searched, which are required by convention 
to be coallocated with the vdi\-file of the virtual system storage.
When missing the vdi\-files are scanned and for any found the
information is accomplished by call of VBoxManage.
A prerequisite is here the previous registration of the VM, which
could be automated by the ctys scanners.

The current version requires for several functions a valid installation of 
VirtualBox(TM) on the executing machine.
When no installation is found only very basic information is collected and
the 'VMSTATE' is set to 'DISABLED'.
This is due to the requirement of VBoxManage as the interface for
transformation and mapping of the label/name and UUID of the VMs.
This is also utilized for the match\-filters within the automated scanners.

Once the VM is detected the second optional requirement is the pre\-registration
of the VMs due to the required analysis of some virtual hardware parameters.
These comprise for example the architecture, the virtual RAM, the number of
emulated CPUs, and more.
When these parameters are not detected they are just ignored and an empty field is
added to the machine record.

The next requirement is the access permission to the information,
which first requires access to the containing directory and files.

\fBREMARK:\fR This behaviour may be changed and expanded within the next releases.

.TP
\fB\-L <execution\-location>\fR
.nf
  <execution-location>=(
     (LOCALONLY|LO)
     | (CONNECTIONFORWARDING|CF)
     | (DISPLAYFORWARDING|DF)
     | (SERVERONLY|SO)
    )
.fi


Currently the following selections are supported:


.TS
center, allbox, tab(^); lllll.
 \fBProduct/Version\fR^\fBLO\fR^\fBCF\fR^\fBDF\fR^\fBSO\fR
 VBOX^NBSP^no^yes^no
 VBOXSDL^NBSP^no^yes^no
 RDP^NBSP^yes^yes^yes
.TE


.TS
center, tab(^); l.
 \fBForwarding modes and call locations for VBOX versions\fR
.TE


.SH PREREQUISITES
.TP
\fBSupported products:\fR


.TS
center, allbox, tab(^); ll.
 \fBProduct\fR^\fBTested Versions\fR
 VirtualBox^>3.x (3.1.2)
 rdesktop^>1.x (1.6.0)
.TE


.TS
center, tab(^); l.
 \fBSupported products\fR
.TE


.SH SEE ALSO
.P
\fIctys(1)\fR
,
\fIctys\-CLI(1)\fR
,
\fIctys\-configuration\-VBOX(7)\fR
,
\fIctys\-createConfVM(1)\fR
,
\fIctys\-plugins(1)\fR
,
\fIctys\-RDP(1)\fR
,
\fIctys\-uc\-VBOX(7)\fR
,
\fIctys\-vhost(1)\fR
,
\fIctys\-VNC(1)\fR
,
\fIctys\-X11(1)\fR

.P
\fBFor System Tools:\fR

.P
\fIrdesktop\fR: [ http://www.rdesktop.org ]

.SH AUTHOR
.TS
tab(^); ll.
 Maintenance:^<acue_sf1@sourceforge.net>
 Homepage:^<http://www.UnifiedSessionsManager.org>
 Sourceforge.net:^<http://sourceforge.net/projects/ctys>
 Berlios.de:^<http://ctys.berlios.de>
 Commercial:^<http://www.i4p.com>
.TE


.SH COPYRIGHT
.P
Copyright (C) 2008, 2009, 2010 Ingenieurbuero Arno\-Can Uestuensoez

.P
This is software and documentation from \fBBASE\fR package,

.RS
.IP \(bu 3
for software see GPL3 for license conditions,
.IP \(bu 3
for documents  see GFDL\-1.3 with invariant sections for license conditions.
.RE

.P
The whole document \- all sections \- is/are defined as invariant.

.P
For additional information refer to enclosed Releasenotes and License files.


.\" man code generated by txt2tags 2.3 (http://txt2tags.sf.net)
.\" cmdline: txt2tags -t man -i ctys-VBOX.t2t -o /tmpn/0/ctys/bld/01.11.011/doc-tmp/BASE/en/man/man1/ctys-VBOX.1


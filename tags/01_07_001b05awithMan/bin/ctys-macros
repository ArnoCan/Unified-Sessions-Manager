#!/bin/bash

########################################################################
#
#PROJECT:      Unified Sessions Manager
#AUTHOR:       Arno-Can Uestuensoez - acue@UnifiedSessionsManager.org
#MAINTAINER:   Arno-Can Uestuensoez - acue_sf1@sourceforge.net
#SHORT:        ctys
#CALLFULLNAME: Commutate To Your Session
#LICENCE:      GPL3
#VERSION:      01_06_001a13
#
########################################################################
#
#     Copyright (C) 2007,2008 Arno-Can Uestuensoez (UnifiedSessionsManager.org)
#
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################


################################################################
#                   Begin of FrameWork                         #
################################################################


#FUNCBEG###############################################################
#
#PROJECT:
MYPROJECT="Unified Sessions Manager"
#
#NAME:
#  ctys-extractMAClst
#
#AUTHOR:
AUTHOR="Arno-Can Uestuensoez - acue@UnifiedSessionsManager.org"
#
#FULLNAME:
FULLNAME="ctys-macros"
#
#CALLFULLNAME:
CALLFULLNAME="CTYS Macro Utility"
#
#LICENCE:
LICENCE=GPL3
#
#TYPE:
#  bash-script
#
#VERSION:
VERSION=01_06_001a13
#DESCRIPTION:
#  See manual.
#
#EXAMPLE:
#
#PARAMETERS:
#
#OUTPUT:
#  RETURN:
#  VALUES:
#
#FUNCEND###############################################################


################################################################
#                     Global shell options.                    #
################################################################
shopt -s nullglob



################################################################
#       System definitions - do not change these!              #
################################################################
#Execution anchor
MYHOST=`uname -n`
MYCALLPATHNAME=$0
MYCALLNAME=`basename $MYCALLPATHNAME`

if [ -n "${MYCALLPATHNAME##/*}" ];then
    MYCALLPATHNAME=${PWD}/${MYCALLPATHNAME}
fi
MYCALLPATH=`dirname $MYCALLPATHNAME`
###################################################
#load basic library required for bootstrap        #
###################################################
MYBOOTSTRAP=${MYCALLPATH}/bootstrap
if [ ! -d "${MYBOOTSTRAP}" ];then
  echo "${MYCALLNAME}:$LINENO:ERROR:Missing:MYBOOTSTRAP=${MYBOOTSTRAP}"
cat <<EOF  

DESCRIPTION:
  This directory contains the common mandatory bootstrap functions.
  Your installation my be erroneous.  

SOLUTION-PROPOSAL:
  First of all check your installation, because an error at this level
  might - for no reason - bypass the final tests.

  If this does not help please send a bug-report.

EOF
  exit 1
fi

MYBOOTSTRAP=${MYBOOTSTRAP}/bootstrap.01.01.002
if [ ! -f "${MYBOOTSTRAP}" ];then
  echo "${MYCALLNAME}:$LINENO:ERROR:Missing:MYBOOTSTRAP=${MYBOOTSTRAP}"
cat <<EOF  

DESCRIPTION:
  This file contains the common mandatory bootstrap functions required
  for start-up of any shell-script within this package.

  It seems though your installation is erroneous or you detected a bug.  

SOLUTION-PROPOSAL:
  First of all check your installation, because an error at this level
  might - for no reason - bypass the final tests.

  When your installation seems to be OK, you may try to set a TEMPORARY
  symbolic link to one of the files named as "bootstrap.<highest-version>".
  
    ln -s ${MYBOOTSTRAP} bootstrap.<highest-version>

  in order to continue for now. 

  Be aware, that any installation containing the required file will replace
  the symbolic link, because as convention the common boostrap files are
  never symbolic links, thus only recognized as a temporary workaround to 
  be corrected soon.

  If this does not work you could try one of the other versions.

  Please send a bug-report.

EOF
  exit 1
fi

###################################################
#Start bootstrap now                              #
###################################################
. ${MYBOOTSTRAP}
###################################################
#OK - utilities to find components of this version#
#available now.                                   #
###################################################

#
#set real path to install, resolv symbolic links
_MYCALLPATHNAME=`bootstrapGetRealPathname ${MYCALLPATHNAME}`
MYCALLPATH=`dirname ${_MYCALLPATHNAME}`
#
###################################################
#Now find libraries might perform reliable.       #
###################################################


#current language, not really NLS
MYLANG=${MYLANG:-en}

#path for various loads: libs, help, macros, plugins
MYLIBPATH=${CTYS_LIBPATH:-`dirname $MYCALLPATH`}

#path for various loads: libs, help, macros, plugins
MYHELPPATH=${MYLIBPATH}/help/${MYLANG}


###################################################
#Check master hook                                #
###################################################
bootstrapCheckInitialPath
###################################################
#OK - Now should work.                            #
###################################################

MYCONFPATH=${MYLIBPATH}/conf/ctys
if [ ! -d "${MYCONFPATH}" ];then
  echo "${MYCALLNAME}:$LINENO:ERROR:Missing:MYCONFPATH=${MYCONFPATH}"
  exit 1
fi

if [ -f "${MYCONFPATH}/versinfo.conf" ];then
    . ${MYCONFPATH}/versinfo.conf
fi

MYMACROPATH=${MYCONFPATH}/macros
if [ ! -d "${MYMACROPATH}" ];then
  echo "${MYCALLNAME}:$LINENO:ERROR:Missing:MYMACROPATH=${MYMACROPATH}"
  exit 1
fi

MYPKGPATH=${MYLIBPATH}/plugins
if [ ! -d "${MYPKGPATH}" ];then
  echo "${MYCALLNAME}:$LINENO:ERROR:Missing:MYPKGPATH=${MYPKGPATH}"
  exit 1
fi

MYINSTALLPATH= #Value is assigned in base. Symbolic links are replaced by target


##############################################
#load basic library required for bootstrap   #
##############################################
. ${MYLIBPATH}/lib/base
. ${MYLIBPATH}/lib/libManager
. ${MYLIBPATH}/lib/misc

#
#Germish: "Was the egg or the chicken first?"
#
#..and prevent real load order for later display.
#
bootstrapRegisterLib
baseRegisterLib
libManagerRegisterLib
##############################################
#Now the environment is armed, so let's go.  #
##############################################

if [ ! -d "${MYINSTALLPATH}" ];then
    ABORT=1;
    printERR $LINENO $BASH_SOURCE ${ABORT} "Missing:MYINSTALLPATH=${MYINSTALLPATH}"
    gotoHell ${ABORT}
fi

MYOPTSFILES=${MYOPTSFILES:-$MYLIBPATH/help/$MYLANG/*_base_options} 
checkFileListElements "${MYOPTSFILES}"
if [ $? -ne 0 ];then
    ABORT=1;
    printERR $LINENO $BASH_SOURCE ${ABORT} "Missing:MYOPTSFILES=${MYOPTSFILES}"
    gotoHell ${ABORT}
fi


################################################################
# Main supported runtime environments                          #
################################################################
#release
TARGET_OS="Linux: CentOS/RHEL(5+), SuSE-Professional 9.3"

#to be tested - coming soon
TARGET_OS_SOON="OpenBSD+Linux(might work for any dist.):Ubuntu+OpenSuSE"

#to be tested - might be almsot OK - but for now FFS
#...probably some difficulties with desktop-switching only?!
TARGET_OS_FFS="FreeBSD+Solaris/SPARC/x86"

#release
TARGET_WM="Gnome + fvwm"

#to be tested - coming soon
TARGET_WM_SOON="xfce"

#to be tested - coming soon
TARGET_WM_FORESEEN="KDE(might work now)"

################################################################
#                     End of FrameWork                         #
################################################################


#
#Verify OS support
#
case ${MYOS} in
    Linux);;
    OpenBSD);;
    SunOS);;
    *)
        printINFO 1 $LINENO $BASH_SOURCE 1 "${MYCALLNAME} is not supported on ${MYOS}"
	gotoHell 0
	;;
esac


if [ "${*}" != "${*//-X/}" ];then
    C_TERSE=1
fi


. ${MYLIBPATH}/lib/help/help

#path to directory containing the default mapping db
if [ -d "${HOME}/.ctys/db/default" ];then
    DEFAULT_DBPATHLST=${DEFAULT_DBPATHLST:-$HOME/.ctys/db/default}
fi

#path to directory containing the default mapping db
if [ -d "${MYCONFPATH}/db/default" ];then
    DEFAULT_DBPATHLST=${DEFAULT_DBPATHLST:-$HOME/conf/db/default}
fi


#Source pre-set environment from user
if [ -f "${HOME}/.ctys/ctys.conf" ];then
  . "${HOME}/.ctys/ctys.conf"
fi

#Source pre-set environment from installation 
if [ -f "${MYCONFPATH}/ctys.conf" ];then
  . "${MYCONFPATH}/ctys.conf"
fi


#system tools
if [ -f "${HOME}/.ctys/systools.conf.${MYDIST}" ];then
    . "${HOME}/.ctys/systools.conf.${MYDIST}"
else

    if [ -f "${MYCONFPATH}/systools.conf.${MYDIST}" ];then
	. "${MYCONFPATH}/systools.conf.${MYDIST}"
    else
	if [ -f "${MYCALLPATH}/../conf/ctys/systools.conf.${MYDIST}" ];then
	    . "${MYCALLPATH}/../conf/ctys/systools.conf.${MYDIST}"
	else
	    ABORT=1;
	    printERR $LINENO $BASH_SOURCE ${ABORT} "Missing system tools configuration file:\"systools.conf.${MYDIST}\""
	    printERR $LINENO $BASH_SOURCE ${ABORT} "Check your installation."
	    gotoHell ${ABORT}
	fi
    fi
fi


################################################################
#    Default definitions - User-Customizable  from shell       #
################################################################

argLst=;
while [ -n "$1" ];do
    case $1 in
	'-a')shift;_atom=1;;
	'-c')shift;_combined=1;;
	'-D')shift;_defines=1;;
	'-E')shift;_expand=1;_combined=1;;
	'-f')shift;_myFile=${1};shift;;
	'-l')shift;_mfiles=1;;

	'-d')shift;DBG=$1;shift;;
	'-X')_terse=1;shift;;
	'-V')printVersion;exit 0;;
	'-h'|'--help'|'-help')showToolHelp;exit 0;;
        *)
	    ABORT=1
	    printERR $LINENO $BASH_SOURCE ${ABORT} "Unknown option:\"${1}\""
	    gotoHell ${ABORT}
	    ;;
    esac
done


if [ -z "$_atom" -a -z "$_combined" -a -z "$_mfiles" ];then
    _mfiles=1;
    _atom=1;
    _combined=1;
fi

#set for later list "-l"
_mySearchPath="${CTYS_MACRO_PATH}";
_tmpx="${_myFilePath%/*}";
if [ "${_mySearchPath}" == "${_mySearchPath//$_tmpx}" ];then
    _mySearchPath="${_mySearchPath}:${_tmpx}";
fi

_myFilePath=`matchFirstFile "$_myFile" "$_mySearchPath"`;
if [ -z "$_myFile" ];then
    _myFilePath=${CTYS_MACRO_DB}
fi
if [ ! -f "${_myFilePath}" ];then
    ABORT=2
    printERR $LINENO $BASH_SOURCE ${ABORT} "Cannot access MACRO file db:\"${_myFilePath}\""
    gotoHell ${ABORT}
fi


function fetchMacros () {
    awk '{cont=gsub("\\\\$","");if(cont==0)print;else printf("%s",$0);}'|\
    sed 's/  */ /g'|\
    awk -v d=1 -F'=' '
/^ *#.*/||/^$/{
  next;
}

NF==1{
  next;
}
{
  gsub("[mM][aA][cC][rR][oO]:","macro:")
}
{
  m=$1
  msub="";
  subm="";

  for(i=2;i<=NF;i++){
     if(i==2)subm=$i;
     else subm=subm"="$i;
  }
  if(subm~/macro:/){
     gsub("^[^m]*macro:","macro:",subm)
     msub=subm;
  }
  if(msub!~/^$/){
     printf("%s=%s\n",m,msub);
  }
  else{
     printf("%s\n",m,msub);
  }
}
'\
|sed '
  s/\(^.*[mM][aA][cC][rR][oO]:[^,% ]*\).*$/\1/;
  s/ \([mM][aA][cC][rR][oO]:[^,% ]*\)/%\1/g;
  s/\([^=]*\)=/%macro:\1%/;
  s/[^%mM]*\(%*[mM][aA][cC][rR][oO]:[^,% ]*\)[^,% ]*/<\1>/g;
  s/\(>\)\([^><]\+\)\(<\)/\1\3/g;
  s/[<>]//g;
  s/%*[mM][aA][cC][rR][oO]//g;
  s/^://g;
'
}


function fetchMacroDefinesAtoms () {
    awk '{cont=gsub("\\\\$","");if(cont==0)print;else printf("%s",$0);}'|\
    sed 's/  */ /g'|\
    awk -v d=1 -F'=' '
/^ *#.*/||/^$/{
  next;
}

!/[mM][aA][cC][rR][oO]/&&NF==2{
     print;
}
'
}

function fetchMacroDefinesCombined () {
    awk '{cont=gsub("\\\\$","");if(cont==0)print;else printf("%s",$0);}'|\
    sed 's/  */ /g'|\
    awk -v d=1 -F'=' '
/^ *#.*/||/^$/{
  next;
}

!/[mM][aA][cC][rR][oO]/&&NF==2{
  next;
}

{
     print;
}
'
}


function listFormatMultiple () {
    awk -F':' '
      BEGIN{
        abuf1[1]="";
        abuf2[1]="";
        ind=1;
        max1=0;
        formstr1="%-20s=%s\n";
      }
      NF!=1{
        buf=$2;
        for(i=3;i<=NF;i++){
          buf=buf":"$i;
        }
        if(length($1)>max1){
          max1=length($1);
          formstr1="%-"max1"s=%s\n";
        }
        abuf1[ind]=$1;
        abuf2[ind]=buf;
        ind++;  
      }
      END{
        for(i=1;i<ind;i++){
          printf(formstr1,abuf1[i],abuf2[i]);
        }
      }
    '
}



if [ -n "$_mfiles" ];then
    echo 
    echo "#################################################################"
    echo "available files - Standalone Macro Files"
    echo "#################################################################"
    for i in ${_mySearchPath//:/ };do
	echo "$i:"
	if [ -d "${i}" ];then
	    for fx in ${i}/*;do
		echo " ->${fx##*/}"
	    done
	fi
    done

fi


if [ -n "$_atom" -o -n "$_combined" ];then
    echo "#################################################################"
    echo "current selected file:"
    echo " => ${_myFilePath}"
    echo "#################################################################"
fi




if [ -n "$_atom" ];then
    echo 
    echo "---------------------------------------------------------"
    echo "atoms - Single Level"
    echo "---------------------------------------------------------"
    if [ -n "$_defines" -o  -n "$_expand" ];then
	cat ${_myFilePath}|fetchMacroDefinesAtoms|sed 's/\(^[^=]*\)=/\1:/'|listFormatMultiple|sort
    else
	ALL=`cat ${_myFilePath}|fetchMacros`
	for i in $ALL;do echo $i|awk -F':' 'NF==1{print}'; done|sort
    fi
fi



if [ -n "$_combined" ];then
    echo
    echo "---------------------------------------------------------"
    echo "combined - Nested Multiple Levels"
    echo "---------------------------------------------------------"
    if [ -n "$_expand" ];then
	ALL=`cat ${_myFilePath}|fetchMacros`
	for i in $ALL;do echo "${i%%:*}:`replaceMacro macro:${i%%:*}%${_myFilePath}`"; done\
           |awk -F':' 'NF>=3{print}'|listFormatMultiple|sort
    else
	if [ -n "$_defines" ];then
	    cat ${_myFilePath}|fetchMacroDefinesCombined|sed 's/\(^[^=]*\)=/\1:/;'|listFormatMultiple|sort
	else
	    ALL=`cat ${_myFilePath}|fetchMacros`
	    for i in $ALL;do echo $i; done |listFormatMultiple|sed 's/} *$//;'|sort
	fi
    fi
fi
